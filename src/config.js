const CONFIG = {
  submit: {
    runTime: {
      type: "textInput",
      title: "Total Time",
      id: "runTime",
      required: true,
      placeholder: "1:30:00",
      help: "Time when you see the flash/hear the crack after killing Kefka.",
    },
    ktStartTime: {
      type: "textInput",
      title: "KT Start Time",
      id: "ktStartTime",
      required: false,
      placeholder: "1:00:00",
      help: "Time after you pick your party to enter Kefka's Tower.",
    },
    kefkaTime: {
      type: "textInput",
      title: "Kefka Start Time",
      id: "kefkaTime",
      required: false,
      placeholder: "1:20:00",
      help: "Time when your final party steps on the final switch.",
    },
    flagset: {
      type: "dropdown",
      title: "Flagset",
      id: "flagset",
      required: false,
      enumName: "Flagset",
      help: "What flagset did you run?",
    },
    chars: {
      type: "checkbox",
      title: "Characters",
      id: "chars",
      required: true,
      enumName: "Character",
    },
    abilities: {
      type: "checkbox",
      title: "Abilities",
      id: "abilities",
      required: true,
      enumName: "Ability",
    },
    numOfChars: {
      type: "slider",
      title: "Characters Found",
      id: "numOfChars",
      required: true,
      min: "1",
      max: "14",
      step: "1",
      startingValue: "3",
      help: "Final number of characters, found in the Track->Progress screen.",
    },
    numOfEspers: {
      type: "slider",
      title: "Espers Found",
      id: "numOfEspers",
      required: true,
      min: "0",
      max: "27",
      step: "1",
      startingValue: "0",
      help: "Final number of espers, found in the Track->Progress screen.",
    },
    numOfChecks: {
      type: "slider",
      title: "Checks Complete",
      id: "numOfChecks",
      required: true,
      min: "0",
      max: "61",
      step: "1",
      startingValue: "0",
      help: "Total amount of checks, found in the Track->Progress screen.",
    },
    numOfPeekedChecks: {
      type: "slider",
      title: "Checks Peeked/Canceled",
      id: "numOfPeekedChecks",
      required: false,
      min: "0",
      max: "61",
      step: "1",
      startingValue: "0",
      help: "Number of checks that added to time but were not captured above.  This includes any checks that were peeked at, warped or reset out of.",
    },
    numOfBosses: {
      type: "slider",
      title: "Bosses Defeated",
      id: "numOfBosses",
      required: true,
      min: "0",
      max: "39",
      step: "1",
      startingValue: "0",
      help: "Total amount of bosses defeated, found in the Track->Progress screen.",
    },
    numOfChests: {
      type: "slider",
      title: "Number of Chests",
      id: "numOfChests",
      required: false,
      min: "0",
      max: "255",
      step: "1",
      startingValue: "0",
      help: "Entering 0 chests indicates that you did not record this datapoint.",
    },
    skip: {
      type: "toggle",
      title: "Skip",
      id: "skip",
      required: true,
      help: "Whether you skipped straight to the statues in Kefka's Tower.",
    },
    dragons: {
      type: "checkbox",
      title: "Dragons Defeated",
      id: "dragons",
      required: true,
      subtitleText: "Where you fought a dragon",
      help: "Selecting none indicates that you took 0 dragon fights.",
      enumName: "Dragon",
    },
    finalBattle: {
      type: "checkbox",
      title: "Final Battle Preparation",
      id: "finalBattle",
      required: false,
      help: "Selecting none indicates no special prep for the final battle.",
      enumName: "FinalBattleTrait",
    },
    highestLevel: {
      type: "slider",
      title: "Highest Level",
      id: "highestLevel",
      required: false,
      min: "0",
      max: "99",
      step: "1",
      startingValue: "0",
      help: "Highest level character.  Selecting '0' to opt out of this metric.",
    },
    superBalls: {
      type: "dropdown",
      title: "Superballs",
      id: "superBalls",
      required: false,
      enumName: "Superballs",
      help: "Whether you bought Superballs.",
    },
    egg: {
      type: "dropdown",
      title: "Exp. Egg",
      id: "egg",
      required: false,
      enumName: "Egg",
      help: "Did you find an Exp. Egg and get value out of it?",
    },
    coliseum: {
      type: "dropdown",
      title: "Coliseum",
      id: "coliseum",
      required: false,
      enumName: "Coliseum",
      help: "If you went to the coliseum.",
    },
    thiefPeek: {
      type: "dropdown",
      title: "Tzen Thief",
      id: "thiefPeek",
      required: false,
      enumName: "ThiefPeek",
      help: "Did you do the Tzen Thief check?",
    },
    thiefReward: {
      type: "dropdown",
      title: "Tzen Thief - Reward",
      id: "thiefReward",
      required: false,
      enumName: "ThiefReward",
      help: "What was the thief's reward?",
    },
    auction: {
      type: "dropdown",
      title: "Auction House",
      id: "auction",
      required: false,
      enumName: "Auction",
      help: "Number of espers bought at the Auction House.",
    },
    race: {
      type: "dropdown",
      title: "Race",
      id: "race",
      required: false,
      enumName: "Race",
      help: 'Whether this run was a race or not.  Note that "Practice" indicates a sync or async race, not individual practice',
    },
    mood: {
      type: "dropdown",
      title: "Run Mood",
      id: "mood",
      required: false,
      enumName: "Mood",
      help: "On a scale of 1-5, how you felt about your run (5 being the best).",
    },
    seed: {
      type: "textInput",
      title: "Seed",
      id: "seed",
      required: false,
      placeholder: "abcd1234ef56",
      help: "Unique ID generated for your seed.",
    },
    raceId: {
      type: "textInput",
      title: "Race ID",
      id: "raceId",
      required: false,
      placeholder: "abc123",
      help: "Race room ID for Discord-based race.",
    },
  },
  submitFormat: {
    // This is the format of panels on the submission page.  The children of the colums are the cards
    // and their children are the fields in those cards.
    columnLeft: {
      runTime: {
        title: "Run Time",
        children: [
          "runTime",
          "ktStartTime",
          "kefkaTime",
          "flagset",
          "seed",
          "race",
          "raceId",
          "mood",
        ],
      },
      startingParty: {
        title: "Starting Party",
        children: ["chars", "abilities"],
      },
    },
    columnRight: {
      progress: {
        title: "Progress",
        children: [
          "numOfChars",
          "numOfEspers",
          "numOfChecks",
          "numOfPeekedChecks",
          "dragons",
          "skip",
        ],
      },
      offense: {
        title: "Offense",
        children: [
          "finalBattle",
          "highestLevel",
          "superBalls",
          "egg",
          "coliseum",
        ],
      },
      checks: {
        title: "Misc",
        children: [
          "numOfBosses",
          "numOfChests",
          "auction",
          "thiefPeek",
          "thiefReward",
        ],
      },
    },
  },
};

export default CONFIG;
